DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS hotels CASCADE;
DROP TABLE IF EXISTS rooms CASCADE;
DROP TABLE IF EXISTS room_types CASCADE;
DROP TABLE IF EXISTS reservations CASCADE;
DROP TABLE IF EXISTS payment CASCADE;
DROP TABLE IF EXISTS roles CASCADE;
DROP TABLE IF EXISTS users_roles CASCADE;
DROP TABLE IF EXISTS persistent_logins CASCADE;

CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username varchar(255) not null,
    password_hash varchar(255) not null,
    first_name varchar(255) not null,
    middle_name varchar(255),
    last_name varchar(255) not null,
    email varchar(255) not null,
    enabled boolean,
    UNIQUE(username)
);

create table roles (
  role_id int generated by default as identity not null,
  role_name VARCHAR(255),
  primary key (role_id)
);

create table users_roles (
    user_id int,
    role_id int, 
    foreign key (user_id) references users (user_id),
    foreign key (role_id) references roles (role_id)
);

create table persistent_logins (
    username varchar(255) not null,
    series varchar(64) primary key, 
    token varchar(64) not null,
    last_used timestamp not null
);

CREATE TABLE locations ( 
    id INT AUTO_INCREMENT PRIMARY KEY,
    address_str varchar(255), 
    city varchar(255), 
    state_cd varchar(25), 
    POSTAL_CODE int not null
);
CREATE TABLE hotels (
    id INT AUTO_INCREMENT  PRIMARY KEY,
    hotel_name varchar(255),
    location_id INT not null,
    FOREIGN KEY(location_id) REFERENCES locations(id)
);
CREATE TABLE room_types ( 
    id INT AUTO_INCREMENT PRIMARY KEY,
    room_type_str varchar(255) not null
);
CREATE TABLE rooms ( 
    id INT AUTO_INCREMENT PRIMARY KEY,
    room_name varchar(255),
    guests INT not null,
    room_type_id INT not null,
    hotel_id INT not null,
    cost_per_night DECIMAL not null,
    FOREIGN KEY(hotel_id) REFERENCES hotels(id),
    FOREIGN KEY(room_type_id) REFERENCES room_types(id)
);
CREATE TABLE reservations ( 
    id INT AUTO_INCREMENT PRIMARY KEY,
    start_dt date default sysdate not null,
    end_dt date not null,
    user_id INT not null,
    room_id INT not null,
    FOREIGN KEY(user_id) REFERENCES users(user_id),
    FOREIGN KEY(room_id) REFERENCES rooms(id)
);

create table PAYMENT (
  id INT AUTO_INCREMENT PRIMARY KEY,
  USER_ID int not null,
  CARD_TYPE VARCHAR(50) not null,
  CARD_HOLDER_NAME VARCHAR(100) not null,
  CARD_NUMBER varchar(20) not null,
  CVV varchar(4) not null,
  exp_dt date not null,
  foreign key (USER_ID) REFERENCES users(user_id)
);



